
#Использовать fs
#Использовать "../internal/localization"

Перем КешМодулей;
Перем КаталогПроекта;
Перем КаталогИсходныхФайлов;
Перем ОбработчикиФормата;
Перем Лог;
Перем ЛокализованныеСтроки;

#Область СлужебныйПрограммныйИнтерфейс

Процедура УстановитьОбработчикиПоискаМодулей(ФорматИсходныхФайлов) Экспорт
	
	Если ФорматИсходныхФайлов = ФорматыИсходныхФайлов.EDT Тогда
		ОбработчикиФормата = ОбработчикиФорматов.ОбработчикиФормата(ОбработчикиФорматаEDT);
	ИначеЕсли ФорматИсходныхФайлов = ФорматыИсходныхФайлов.XML Тогда 
		ОбработчикиФормата = ОбработчикиФорматов.ОбработчикиФормата(ОбработчикиФорматаXML);
	Иначе
		ВызватьИсключение СтрШаблон(ЛокализованныеСтроки.ИсключениеНеизвестныйФормат, ФорматИсходныхФайлов);
	КонецЕсли;

КонецПроцедуры

Процедура УстановитьОбработчикиПоискаВнешнихМодулей(ФорматИсходныхФайлов) Экспорт
	
	Если ФорматИсходныхФайлов = ФорматыИсходныхФайлов.EDT Тогда
		ОбработчикиФормата = ОбработчикиФорматов.ОбработчикиФорматаВнешнийМодуль(ОбработчикиФорматаEDT);
	ИначеЕсли ФорматИсходныхФайлов = ФорматыИсходныхФайлов.XML Тогда 
		ОбработчикиФормата = ОбработчикиФорматов.ОбработчикиФорматаВнешнийМодуль(ОбработчикиФорматаXML);
	Иначе
		ВызватьИсключение СтрШаблон(ЛокализованныеСтроки.ИсключениеНеизвестныйФормат, ФорматИсходныхФайлов);
	КонецЕсли;

КонецПроцедуры

Функция НайтиПрограммныйМодуль(ВидПрограммногоМодуля, ИДПрограммногоМодуля) Экспорт

	Обработчик = ОбработчикиФормата.Получить(ВидПрограммногоМодуля);
	Если Обработчик = Неопределено Тогда
		ТестСообщения = СтрШаблон(ЛокализованныеСтроки.СообщениеНеНайденОбработчик, ВидПрограммногоМодуля);
		Лог.Ошибка(ТестСообщения);
		Возврат Неопределено;
	КонецЕсли;

	КлючКеша = СтрШаблон("%1+%2", ИДПрограммногоМодуля, ВидПрограммногоМодуля);
	ЗначениеКеша = КешМодулей.Получить(КлючКеша);
	Если ТипЗнч(ЗначениеКеша) = Тип("Структура") Тогда
		Возврат ЗначениеКеша;
	КонецЕсли;

	Если ЗначениеЗаполнено(КаталогПроекта) Тогда
		ПутьКИсходнымФайлам = ОбъединитьПути(КаталогПроекта, КаталогИсходныхФайлов);
	Иначе
		ПутьКИсходнымФайлам = КаталогИсходныхФайлов;
	КонецЕсли;

	КаталогИсходников = Новый Файл(ПутьКИсходнымФайлам);
	ПутьПрограммногоМодуля = Обработчик.Выполнить(КаталогИсходников.ПолноеИмя, ИДПрограммногоМодуля);
	Если ТипЗнч(ПутьПрограммногоМодуля) = Тип("Строка") Тогда
		
		Если ЗначениеЗаполнено(КаталогПроекта) Тогда
			ПутьВПроекте = ФС.ОтносительныйПуть(КаталогПроекта, ПутьПрограммногоМодуля);
		Иначе
			ПутьВПроекте = ФС.ОтносительныйПуть(ТекущийКаталог(), ПутьПрограммногоМодуля);
		КонецЕсли;
		
		Если Не ФС.ФайлСуществует(ПутьПрограммногоМодуля) Тогда
			ТестСообщения = СтрШаблон(ЛокализованныеСтроки.СообщениеМодульНеСуществует, ПутьВПроекте);	
			Лог.Ошибка(ТестСообщения);
			Возврат Неопределено;
		КонецЕсли;
		
		ЗначениеКеша = ПрограммныйМодуль(ПутьВПроекте);
		КешМодулей.Вставить(КлючКеша, ЗначениеКеша);
		Возврат ЗначениеКеша;
	КонецЕсли;

	Возврат Неопределено;

КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриСозданииОбъекта(ПараметрКаталогПроекта, ПараметрКаталогИсходныхФайлов) Экспорт

	Лог = ПараметрыПриложения.Лог();
	ЛокализованныеСтроки = ЛокализованныеРесурсыКонвертерИменМодулей.ЛокализованныеСтроки();

	КаталогПроекта = ПараметрКаталогПроекта;
	КаталогИсходныхФайлов = ПараметрКаталогИсходныхФайлов;

	КешМодулей = Новый Соответствие;	

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПрограммныйМодуль(ПутьПрограммногоМодуля)

	ПрограммныйМодуль = Новый Структура;
	ПрограммныйМодуль.Вставить("Путь", ПутьПрограммногоМодуля);
	ПрограммныйМодуль.Вставить("Идентификатор", XMLСтрока(Новый УникальныйИдентификатор()));
	Возврат ПрограммныйМодуль; 

КонецФункции

#КонецОбласти
