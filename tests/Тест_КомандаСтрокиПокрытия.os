#Использовать fs
#Использовать cli
#Использовать asserts
#Использовать "../internal/cmd"
#Использовать "../pkg/genericCoverage"

Перем Тестер;
Перем КаталогСборки;

#Область ОбработчикиСобытий

Функция ПолучитьСписокТестов(Знач Тестирование) Экспорт
	
	Тестер = Тестирование;
	
	ИменаТестов = Новый Массив;
	ИменаТестов.Добавить("ТестДолжен_ПолучитьСтрокиПокрытияконфигурацииXML");
	ИменаТестов.Добавить("ТестДолжен_ПолучитьСтрокиПокрытияконфигурацииEDT");
	
	Возврат ИменаТестов;
	
КонецФункции

Процедура ПередЗапускомТеста() Экспорт
	
	КаталогСборки = Тестер.ИмяВременногоФайла();
	ФС.ОбеспечитьПустойКаталог(КаталогСборки);
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
	Тестер.УдалитьВременныеФайлы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиТестов

Процедура ТестДолжен_ПолучитьСтрокиПокрытияконфигурацииXML() Экспорт
	ПолучитьСтрокиПокрытияКонфигурации(КаталогИсходниковКонфигурацииXML());
КонецПроцедуры

Процедура ТестДолжен_ПолучитьСтрокиПокрытияконфигурацииEDT() Экспорт
	ПолучитьСтрокиПокрытияКонфигурации(КаталогИсходниковКонфигурацииEDT());
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПолучитьСтрокиПокрытияКонфигурации(КаталогИсходниковКонфигурации)
	
	ИмяФайлаРезультатов = ОбъединитьПути(КаталогСборки, "linesToCover.xml");
	
	Аргументы = Новый Массив;
	ДобавитьАргументOutput(Аргументы, ИмяФайлаРезультатов);
	ДобавитьАргументWorkspace(Аргументы, КаталогТестовыхДанных());
	ДобавитьАргументSources(Аргументы, КаталогИсходниковКонфигурации);
	
	ВыполнитьКоманду(Аргументы);
	
	Утверждения.ПроверитьИстину(
		ФС.ФайлСуществует(ИмяФайлаРезультатов),
		"Файл с результатами должен существовать");
	
	ДанныеПокрытия = Новый ПокрытиеGenericCoverage;
	ДанныеПокрытия.Прочитать(ИмяФайлаРезультатов);

	ПрограммныеМодули = ДанныеПокрытия.ПрограммныеМодули();
	
	Утверждения.ПроверитьРавенство(ПрограммныеМодули.Количество(), 79,
		"Проверка количества модулей для покрытия");
	
	ПокрытиеМодуля = ПрограммныеМодули.Получить(0);
	Утверждения.ПроверитьИстину(
		СтрНачинаетсяС(ПокрытиеМодуля, КаталогИсходниковКонфигурации),
		"Имя файла исходников должно начинаться с имени каталога");
	
КонецПроцедуры

Функция КаталогТестовыхДанных()
	Возврат ОбъединитьПути("tests", "testdata");
КонецФункции

Функция КаталогИсходниковКонфигурацииXML()
	Возврат ОбъединитьПути("src", "cf", "xml");
КонецФункции

Функция КаталогИсходниковКонфигурацииEDT()
	Возврат ОбъединитьПути("src", "cf", "edt");
КонецФункции

Процедура ДобавитьАргументOutput(Аргументы, Значение)
	
	Аргументы.Добавить("--output");
	Аргументы.Добавить(Значение);
	
КонецПроцедуры

Процедура ДобавитьАргументWorkspace(Аргументы, Значение)
	
	Аргументы.Добавить("--workspace");
	Аргументы.Добавить(Значение);
	
КонецПроцедуры

Процедура ДобавитьАргументSources(Аргументы, Значение)
	
	Аргументы.Добавить("--sources");
	Аргументы.Добавить(Значение);
	
КонецПроцедуры

Процедура ВыполнитьКоманду(Аргументы)
	
	Команда = Новый КомандаПриложения("testapp", "Тестовое приложения", Новый КомандаСтрокиПокрытия());
	Команда.Опция("d debug", Ложь, "Режим отладки").ТБулево();
	Команда.НачалоЗапуска();
	Команда.Запуск(Аргументы);
	
КонецПроцедуры

#КонецОбласти
