#Область СлужебныйПрограммныйИнтерфейс

Функция ЛокализованныеСтроки() Экспорт
	
	ЛокализованныеСтроки = Новый Структура;
	ЛокализованныеСтроки.Вставить("УтверждениеИмяФайлаТип", УтверждениеИмяФайлаТип());
	ЛокализованныеСтроки.Вставить("УтверждениеИмяФайлаСуществование", УтверждениеИмяФайлаСуществование());
	ЛокализованныеСтроки.Вставить("УтверждениеНомерСтрокиТип", УтверждениеНомерСтрокиТип());
	ЛокализованныеСтроки.Вставить("УтверждениеНомерСтрокиЗаполненность", УтверждениеНомерСтрокиЗаполненность());
	ЛокализованныеСтроки.Вставить("УтверждениеЕстьПокрытиеТип", УтверждениеЕстьПокрытиеТип());
	ЛокализованныеСтроки.Вставить("УтверждениеПокрытиеСтрокТип", УтверждениеПокрытиеСтрокТип());
	ЛокализованныеСтроки.Вставить("УтверждениеПокрытиеСтрокиТип", УтверждениеПокрытиеСтрокиТип());
	
	Возврат ЛокализованныеСтроки;
	
КонецФункции

#КонецОбласти

#Область ЛокализованныеСтроки

Функция УтверждениеИмяФайлаТип()
	Возврат НСтр(
		"ru = 'Имя файла должно быть строкой';
		|en = 'Filename should be a string'");
КонецФункции

Функция УтверждениеИмяФайлаСуществование()
	Возврат НСтр(
		"ru = 'Файл должен существовать';
		|en = 'File should exists'");
КонецФункции

Функция УтверждениеНомерСтрокиТип()
	Возврат НСтр(
		"ru = 'Номер строки должен быть числом';
		|en = 'Line number should be a numeric'");
КонецФункции

Функция УтверждениеНомерСтрокиЗаполненность()
	Возврат НСтр(
		"ru = 'Номер строки должен быть указан';
		|en = 'Line number should be provided'");
КонецФункции

Функция УтверждениеЕстьПокрытиеТип()
	Возврат НСтр(
		"ru = 'Отметка покрытия строки должна быть булево';
		|en = 'Line covered mark should be a boolean'");
КонецФункции

Функция УтверждениеПокрытиеСтрокТип()
	Возврат НСтр(
		"ru = 'Покрытие строк должно быть массивом';
		|en = 'Covered lines mark should be an array'");
КонецФункции

Функция УтверждениеПокрытиеСтрокиТип()
	Возврат НСтр(
		"ru = 'Покрытие строки должно быть структурой';
		|en = 'Line coverage mark should be a structure'");
КонецФункции

#КонецОбласти